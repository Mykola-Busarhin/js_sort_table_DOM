{"version":3,"sources":["scripts/main.js"],"names":["toNumber","string","num","slice","split","join","headings","document","querySelector","table","addEventListener","e","criterion","target","cellIndex","children","sort","a","b","current","cells","innerText","next","localeCompare","forEach","row","append"],"mappings":";AAAA,aAWA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EATA,SAASA,EAASC,GAGTC,OAFMD,EAAOE,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAK/C,IAAMC,EAAWC,SAASC,cAAc,SAClCC,EAAQF,SAASC,cAAc,SAErCF,EAASI,iBAAiB,QAAS,SAACC,GAC5BC,IAAAA,EAAYD,EAAEE,OAAOC,UAExB,EAAIL,EAAMM,UAAUC,KAAK,SAACC,EAAGC,GACzBC,IAAAA,EAAUF,EAAEG,MAAMR,GAAWS,UAC7BC,EAAOJ,EAAEE,MAAMR,GAAWS,UAK1BT,OAFe,IAEfA,GAHY,IAGgBA,GAC9BO,EAAUnB,EAASmB,KACnBG,EAAOtB,EAASsB,IAKXH,EAAQI,cAAcD,KAGrBE,QAAQ,SAACC,GAAQhB,OAAAA,EAAMiB,OAAOD","file":"main.8a185d53.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction toNumber(string) {\n  const num = +string.slice(1).split(',').join('');\n\n  return num;\n}\n\nconst headings = document.querySelector('thead');\nconst table = document.querySelector('tbody');\n\nheadings.addEventListener('click', (e) => {\n  const criterion = e.target.cellIndex;\n  const sortedList\n   = [...table.children].sort((a, b) => {\n     let current = a.cells[criterion].innerText;\n     let next = b.cells[criterion].innerText;\n\n     const ageCell = 3;\n     const salaryCell = 4;\n\n     if (criterion === salaryCell || criterion === ageCell) {\n       current = toNumber(current);\n       next = toNumber(next);\n\n       return current - next;\n     }\n\n     return current.localeCompare(next);\n   });\n\n  sortedList.forEach((row) => table.append(row));\n});\n"]}